@model WeirdosShop.Models.Footer

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_MyLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <!-- Basic Layout -->
        <div class="col-xxl">
            <div class="card mb-4">
                <div class="card-header align-items-center justify-content-between">
                    <h4 class="mb-0">Tạo mới footer</h4>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="card-body">
                    <form>
                        <div class="row mb-3">
                            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            @Html.LabelFor(model => model.link, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            @Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                <div class="input-group input-group-merge">
                                    @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            @Html.LabelFor(model => model.hide, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(model => model.hide, new SelectList(
         new List<SelectListItem>
         {
                                    new SelectListItem { Text = "Hiển thị", Value = "true" },
                                    new SelectListItem { Text = "Ẩn", Value = "false" },
         }, "Value", "Text"), new { @class = "form-control" })
                                @*@Html.EditorFor(model => model.hide)*@
                                @Html.ValidationMessageFor(model => model.hide, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            @Html.LabelFor(model => model.order, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            @Html.LabelFor(model => model.img, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.img, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row justify-content-end">
                            <div class="col-sm-10">
                                <input type="submit" value="Create" class="btn btn-primary" />
                            </div>
                            <div class="col-sm-10 mt-2">
                                @Html.ActionLink("Quay lại", "Index")
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}