@model WeirdosShop.Models.News

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_MyLayout.cshtml";
}

@using (Html.BeginForm("Create", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <!-- Basic Layout -->
        <div class="col-xxl">
            <div class="card mb-4">
                <div class="card-header align-items-center justify-content-between">
                    <h4 class="mb-0">Tạo mới Tin tức</h4>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="card-body">
                    <form>
                        <div class="row mb-3">
                            @Html.Label("Tiêu đề", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            @Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                <div class="input-group input-group-merge">
                                    @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            @Html.Label("Tóm tắt", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            @Html.Label("Chi tiết", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @*@Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.TextAreaFor(model => model.detail)
                                @Html.ValidationMessageFor(model => model.detail, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            @Html.Label("Thứ tự", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-3">
                            @Html.Label("Hiển thị", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                <div class="checkbox">
                                    @{ bool hide = true; }
                                    @Html.CheckBoxFor(model => hide, new { style = "margin: -1px 5px" })
                                    @Html.ValidationMessageFor(model => model.hide, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            @Html.Label("Hình minh họa", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @*@Html.EditorFor(model => model.img, new { htmlAttributes = new { @class = "form-control" } })*@
                                <input type="file" name="img" id="img" accept=".jpg, .png, .svg, .gif, .jpeg, .bmp" />
                                @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row justify-content-end">
                            <div class="col-sm-10">
                                <input type="submit" value="Create" class="btn btn-primary" />
                            </div>
                            <div class="col-sm-10 mt-2">
                                @Html.ActionLink("Quay lại", "Index")
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}
@section _Footer
{
    <script src="~/Areas/Admin/Content/ckfinder/ckfinder.js"></script>
    <script src="~/Areas/Admin/Content/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("detail");
        var editor = CKEDITOR.replace("detail", { height: '600px' });
        customConfig: '~/Areas/Admin/Content/ckeditor/config.js'
    </script>
    <script>
        $(function () {
            $("#name").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/đ/g, "d").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ.+/g, "o").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ.+/g, "e").replace(/ì|í|ị|ỉ|ĩ/g, "i");
                $('#meta').val(text_create);
            }).keyup();
        });
    </script>

}